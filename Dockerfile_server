ARG NODE_VERSION=21.4.0
ARG PNPM_VERSION=8.14.3

FROM node:${NODE_VERSION}-alpine

# Install pnpm.
RUN --mount=type=cache,target=/root/.npm \
    npm install -g pnpm@${PNPM_VERSION}

WORKDIR /usr/src/app

COPY package.json .
COPY pnpm-lock.yaml .

# Download dependencies as a separate step to take advantage of Docker's caching.
# Leverage a cache mount to /root/.local/share/pnpm/store to speed up subsequent builds.
# Leverage a bind mounts to package.json and pnpm-lock.yaml to avoid having to copy them into
# into this layer.
RUN --mount=type=bind,source=package.json,target=package.json \
    --mount=type=bind,source=pnpm-lock.yaml,target=pnpm-lock.yaml \
    --mount=type=cache,target=/root/.local/share/pnpm/store \
    pnpm install --frozen-lockfile

RUN chown node .
RUN chown -R node:node /usr/src/app/node_modules/.pnpm/*prisma*/

RUN mkdir -p /usr/src/app/api/keys && \
    chown -R node:node /usr/src/app/api/keys && \
    chmod -R 777 /usr/src/app/api/keys

# Copy the rest of the source files into the image.
COPY ./api ./api
COPY ./prisma ./prisma

# Run the application as a non-root user.
USER node

# Expose the port that the application listens on.
EXPOSE 3000

CMD pnpm run generate-keys && \
    pnpm run prisma:push && \
    pnpm run start:server --host=0.0.0.0

